export(
    acquireAuditData,
    asRules,
    benfordDistr,
    binning,
    calcInitialDigitDistr,
    calculateAUC,
    centers.hclust,
    comcat,
    copyPlotToClipboard,
    digitDistr,
    drawTreesAda,
    drawTreeNodes,
    errorMatrix,
    evaluateRisk,
    fancyRpartPlot,
    generateAprioriSummary,
    genPlotTitleCmd,
    ggVarImp,
    importance,
    listAdaVarsUsed,
    listTreesAda,
    listVersions,
    modalvalue,
    normVarNames,
    plotDigitFreq,
    plotOptimalLine,
    plotRisk,
    predict.kmeans,
    predict.hclust,
    printPlot,
    printRandomForests,
    print.summary.nnet,
    psfchart,
    randomForest2Rules,
    rattle,
    rattleInfo,
    rattle.print.summary.multinom,
    rescale.by.group,
    riskchart,
    rocChart,
    # 120117 Remove for now - could be harmful.
    # overwritePackageFunction,
    savePlotToFile,
    setupDataset,
    toga,
    treeset.randomForest,
    whichNumerics,
    xgboost,
    crs,crv
    )

exportPattern("_") # Needed for the Glade interface

S3method(asRules, rpart)
S3method(ggVarImp, randomForest)
S3method(ggVarImp, rpart)
S3method(ggVarImp, rxDForest)
S3method(ggVarImp, xgb.Booster)
S3method(ggVarImp, xgb.formula)
S3method(predict, xgb.formula)
S3method(print, xgb.formula)
S3method(importance, xgb.formula)
S3method(xgboost, formula)
S3method(predict, hclust)
S3method(predict, kmeans)
S3method(print.summary, nnet)

#import(RGtk2) # Not required but will be used if available.
import(stats)
import(utils)
import(grDevices)
import(graphics)
import(methods)	  # For possibleExtends() formal classes
import(tibble)

importFrom(magrittr, "%>%")
importFrom(magrittr, "%<>%")
importFrom(stringi, "%s+%")

importFrom(bitops, cksum)
